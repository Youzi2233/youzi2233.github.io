import{_ as i,c as a,o as t,ae as e}from"./chunks/framework.tuuL-SzM.js";const g=JSON.parse('{"title":"前端随手记","description":"","frontmatter":{},"headers":[],"relativePath":"杂物笔记/前端随手记.md","filePath":"杂物笔记/前端随手记.md"}'),p={name:"杂物笔记/前端随手记.md"};function n(l,s,h,o,r,k){return t(),a("div",null,s[0]||(s[0]=[e('<h1 id="前端随手记" tabindex="-1">前端随手记 <a class="header-anchor" href="#前端随手记" aria-label="Permalink to &quot;前端随手记&quot;">​</a></h1><h2 id="如何将fork仓库与原仓库的分支同步" tabindex="-1">如何将fork仓库与原仓库的分支同步 <a class="header-anchor" href="#如何将fork仓库与原仓库的分支同步" aria-label="Permalink to &quot;如何将fork仓库与原仓库的分支同步&quot;">​</a></h2><blockquote><p>通义灵码</p></blockquote><p>要将fork仓库与原仓库的master分支同步，可以按照以下步骤操作：</p><ol><li><p><strong>添加上游仓库</strong>：首先，你需要将原仓库添加为你的fork仓库的远程仓库。假设原仓库的URL是<code>https://github.com/original-owner/original-repo.git</code>，你可以使用以下命令：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/original-owner/original-repo.git</span></span></code></pre></div></li><li><p><strong>获取上游更新</strong>：从原仓库获取最新的更改。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fetch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream</span></span></code></pre></div></li><li><p><strong>切换到本地master分支</strong>：确保你在本地的master分支上。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> checkout</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div></li><li><p><strong>合并上游更改</strong>：将上游仓库的master分支的更改合并到你本地的master分支。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> merge</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> upstream/master</span></span></code></pre></div></li><li><p><strong>解决冲突</strong>：如果在合并过程中出现冲突，你需要手动解决这些冲突，然后提交更改。</p></li><li><p><strong>推送更改到你的fork仓库</strong>：最后，将本地master分支的更改推送到你的fork仓库。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> push</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> origin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> master</span></span></code></pre></div></li></ol><p>通过以上步骤，你的fork仓库的master分支就会与原仓库的master分支保持同步。</p>',6)]))}const c=i(p,[["render",n]]);export{g as __pageData,c as default};
